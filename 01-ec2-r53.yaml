---
- name: Create EC2 instances and R53 records
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0adfe78ec6189cd05
    zone_id: Z03460353RS4GS5RQB39D
    domain_name: "believeinyou.fun"
    # instances:
    # - mongodb


  tasks:
  - name: Create EC2 instances
    amazon.aws.ec2_instance:
      name: "{{item}}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ami_id}}"
      tags:
        Name: "{{item}}"
    loop: "{{instances}}"
    register: ec2_output

  - name: Print the EC2 output
    ansible.builtin.debug:
      msg: "{{ec2_output}}" 

  # - name: Print Public-IP Addrss
  #   ansible.builtin.debug:
  #     msg: "{{item.instances[0].public_ip_address}}" 
  #   loop: "{{ec2_output.results}}"  

  # - name: Print Private-IP Addrss
  #   ansible.builtin.debug:
  #     msg: "{{item.instances[0].private_ip_address}}" 
  #   loop: "{{ec2_output.results}}" 

  - name: Create R53 
    amazon.aws.route53:

      state: present
      zone: "{{domain_name}}"
      record: "{{item.item}}.{{domain_name}}" #mongodb.daws.fun
      type: A
      ttl: 1
      value: "{{item.instances[0].private_ip_address}}" 
      overwrite: true
    loop: "{{ec2_output.results}}"

  # we are creating one record with public only for frontend
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" # daws86s.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"